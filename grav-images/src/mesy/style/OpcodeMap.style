--    YangVillage Website
--    Copyright (C) 2024  Qzlzdy
--
--    This program is free software: you can redistribute it and/or modify
--    it under the terms of the GNU Affero General Public License as published
--    by the Free Software Foundation, either version 3 of the License, or
--    (at your option) any later version.
--
--    This program is distributed in the hope that it will be useful,
--    but WITHOUT ANY WARRANTY; without even the implied warranty of
--    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--    GNU Affero General Public License for more details.
--
--    You should have received a copy of the GNU Affero General Public License
--    along with this program.  If not, see <https://www.gnu.org/licenses/>.
canvas {
    width = 550 -- sum(ws) + 10
    height = 190 -- h * rs + 10
}

consts {
    W = canvas.width
    H = canvas.height

    x0 = -W/2 + 5
    y0 = H/2 - 5
    h = 30

    ws = (80, 80, 50, 40, 50, 80, 80, 40, 40)
}

forall Column c {
    c.a = "middle"
    c.txtoff = 0
}

forall Column `c_0` {
    `c_0`.w = consts.ws[0]
    `c_0`.x = consts.x0 + `c_0`.w/2
}

forall Column `c_1` {
    `c_1`.w = consts.ws[1]
    `c_1`.x = `c_0`.x + (`c_0`.w + `c_1`.w)/2
}

forall Column `c_2` {
    `c_2`.w = consts.ws[2]
    `c_2`.x = `c_1`.x + (`c_1`.w + `c_2`.w)/2
}

forall Column `c_3` {
    `c_3`.w = consts.ws[3]
    `c_3`.x = `c_2`.x + (`c_2`.w + `c_3`.w)/2
}

forall Column `c_4` {
    `c_4`.w = consts.ws[4]
    `c_4`.x = `c_3`.x + (`c_3`.w + `c_4`.w)/2
}

forall Column `c_5` {
    `c_5`.w = consts.ws[5]
    `c_5`.x = `c_4`.x + (`c_4`.w + `c_5`.w)/2
}

forall Column `c_6` {
    `c_6`.w = consts.ws[6]
    `c_6`.x = `c_5`.x + (`c_5`.w + `c_6`.w)/2
}

forall Column `c_7` {
    `c_7`.w = consts.ws[7]
    `c_7`.x = `c_6`.x + (`c_6`.w + `c_7`.w)/2
}

forall Column `c_8` {
    `c_8`.w = consts.ws[8]
    `c_8`.x = `c_7`.x + (`c_7`.w + `c_8`.w)/2
}

forall Row `r_0` {
    `r_0`.h = consts.h
    `r_0`.y = consts.y0 - `r_0`.h/2
}

forall Row `r_1` {
    `r_1`.h = consts.h
    `r_1`.y = `r_0`.y - consts.h
}

forall Row `r_2` {
    `r_2`.h = consts.h
    `r_2`.y = `r_1`.y - consts.h
}

forall Row `r_3` {
    `r_3`.h = consts.h
    `r_3`.y = `r_2`.y - consts.h
}

forall Row `r_4` {
    `r_4`.h = consts.h
    `r_4`.y = `r_3`.y - consts.h
}

forall Row `r_5` {
    `r_5`.h = consts.h
    `r_5`.y = `r_4`.y - consts.h
}

forall Column c; Column c1; Column c2
where c := mergecol(c1, c2) {
    c.w = c1.w + c2.w
    c.x = (c1.x * c1.w + c2.x * c2.w) / c.w
}

forall Row r; Row r1; Row r2
where r := mergerow(r1, r2) {
    r.h = r1.h + r2.h
    r.y = (r1.y * r1.h + r2.y * r2.h) / r.h
}

forall Row r; Column c
where cell(r, c, s)
with String s {
    Rectangle {
        center: (c.x, r.y)
        width: c.w
        height: r.h
        fillColor: none()
        strokeWidth: 1
        strokeColor: #000000
    }
    Text {
        string: s
        center: (c.x + c.txtoff, r.y)
        fontSize: "12pt"
        textAnchor: c.a
    }
}
