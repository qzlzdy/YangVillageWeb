colors {
    white = rgba(1, 1, 1, 1)
    black = rgba(0, 0, 0, 1)
}

cst {
    scalar offsetX = 465
    scalar offsetY = canvas.height / 2 + 5

    scalar bitWidth = 30
    scalar fieldHeight = 30
}

forall Number b
where markBit(s, b) {
    scalar b.u = cst.offsetX - b * cst.bitWidth
    scalar b.v = canvas.height / 2 - 5

    shape b.bitLabel = Text {
        string: s
        center: (b.u, b.v)
        fontSize: "10.5pt"
    }
}

forall Field f;
where makeHeader(f, h, l) {
    scalar f.u = cst.offsetX - (h + l) * cst.bitWidth / 2
    scalar f.v = canvas.height / 2 - 32

    shape f.fieldShape = Rectangle {
        center: (f.u, f.v)
        width: (h - l + 1) * cst.bitWidth
        height: cst.fieldHeight
        fillColor: colors.white
        strokeWidth: 1
        strokeColor: colors.black
    }

    shape f.fieldLabel = Text {
        string: f.label
        center: (f.u, f.v)
        fontSize: "14pt"
    }

    f.fieldLabel above f.fieldShape
}

forall Row r {
    r.count = match_id
}

forall Row r
where implement(f, r, s)
with Field f {
    shape fieldLabel = Text {
        string: s
        center: (f.u, f.v - r.count * cst.fieldHeight * 1.5)
        fontSize: "14pt"
    }
}
